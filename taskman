#!/usr/bin/env ruby

$tableau_taches = [
	{ id: 0, :content => "Ameliorer taskman", flags: %w(important urgent) }
]

OPTIONS_DEFAULT = {
	flags: [],
	date: nil
}



def supprimer id
	$tableau_taches.reject{|tache| tache[:id]==id }
end

# Retourne une tache
def ajouter params
	contenu = params.shift

	tache = {}

	tache[:id] = $tableau_taches.map{ |tache| tache[:id] }.max+1



	tache.merge!(OPTIONS_DEFAULT)


	tache[:content] = contenu

	params.each do |argument|
		champ, valeur = argument.split(':')

		if champ == "flags"
			tache[champ.to_sym] = valeur.split(",")
		else
			tache[champ.to_sym] = valeur
		end
	end

	tache
end


def afficher
	puts "*****TASKMAN*****"
	puts "LISTE DES TACHES "

	$tableau_taches.each do |tache|
		puts "#{tache[:id]} - #{tache[:content]} (#{tache[:flags].join(",")})"
	end
end

def on_command action
	$command ||= ARGV.shift

	if not block_given?
		raise "on_command a besoin d'un block"
	end

	if action == $command
		yield(ARGV)
		$command_faite = true
	end
end

def on_else_command
	if $command_faite.nil?
		yield(ARGV)
	end
end

def afficher_aide
	puts "taskman [commande] [contenu|id] [options...]"
	puts "del :id\t\t* Supprime la tache avec l'identifiant :id"
	puts "mod :id\t\t* Modifie la tache avec l'identifiant :id"
	puts "add :contenu (options...) \t\t* crée une nouvelle tache."
	puts "list :filtre\t\t* Liste les taches selon le filtre donné"
end

on_command 'add' do |arguments|
	$tableau_taches << ajouter(arguments)
end

on_command('del'){ |arguments| supprimer arguments.shift.to_i  }
on_command('mod'){ |arguments| puts 'faire action modifier' }
on_command('list'){ |arguments| puts "permet de lister et filtrer nos taches"  }
on_command('test')
on_else_command{ afficher_aide }

#parser_commande(command)
afficher